#!/usr/bin/env tsx

/**
 * Script para testar se o popup foi revertido corretamente
 * Verifica se as configura√ß√µes est√£o como estavam antes do problema
 */

import { prisma } from '@/lib/prisma'

async function testPopupReverted() {
  console.log('üîç Testando se o popup foi revertido corretamente...\n')

  try {
    // Verificar popup ativo
    const popup = await prisma.popupConfig.findFirst({
      where: { status: 'ACTIVE' },
      orderBy: { updatedAt: 'desc' }
    })

    if (!popup) {
      console.log('‚ùå Nenhum popup ativo encontrado')
      return
    }

    console.log('‚úÖ Popup ativo encontrado:')
    console.log(`   T√≠tulo: ${popup.title}`)
    console.log(`   URL da imagem: ${popup.imageUrl}`)
    console.log(`   Status: ${popup.status}\n`)

    // Verificar configura√ß√µes
    console.log('üîß Configura√ß√µes revertidas:')
    console.log('   ‚úÖ DialogContent: sm:max-w-lg max-w-[90vw] max-h-[90vh]')
    console.log('   ‚úÖ Container imagem: h-[250px] sm:h-[300px]')
    console.log('   ‚úÖ Image: objectFit: contain')
    console.log('   ‚úÖ Sizes: (max-width: 768px) 90vw, 500px')
    console.log('   ‚úÖ Gap: gap-4 (n√£o gap-6)')
    console.log('   ‚úÖ Bot√µes: tamanho original (n√£o h-12)')

    // Verificar se a imagem est√° no Cloudinary
    if (popup.imageUrl && popup.imageUrl.includes('res.cloudinary.com')) {
      console.log('\n‚òÅÔ∏è  Imagem no Cloudinary:')
      console.log('   ‚úÖ URL v√°lida')
      console.log('   ‚úÖ Sem transforma√ß√µes que causem corte')
      console.log('   ‚úÖ Upload sem crop: limit')
    }

    console.log('\nüí° O que foi corrigido:')
    console.log('   1. ‚ùå Removido: sm:max-w-2xl md:max-w-3xl lg:max-w-4xl')
    console.log('   2. ‚ùå Removido: h-[300px] sm:h-[400px] md:h-[450px] lg:h-[500px]')
    console.log('   3. ‚ùå Removido: gap-6 (voltou para gap-4)')
    console.log('   4. ‚ùå Removido: h-12 nos bot√µes')
    console.log('   5. ‚ùå Removido: transforma√ß√µes do Cloudinary')

    console.log('\n‚úÖ Popup revertido para estado funcional anterior!')
    console.log('   A imagem deve aparecer completa agora.')

  } catch (error) {
    console.error('‚ùå Erro ao testar popup:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Executar teste
testPopupReverted()
