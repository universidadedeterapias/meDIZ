name: Automated Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Executa testes todos os dias às 2h UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run unit tests
        run: |
          echo "🧪 Running unit tests..."
          # Quando implementados, descomente a linha abaixo:
          # npm test
          echo "Unit tests not implemented yet"

      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: test-results/
          retention-days: 7
        if: always()

  integration-tests:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mediz_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🗄️ Setup test database
        run: |
          echo "🗄️ Setting up test database..."
          # Configurar banco de teste
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/mediz_test" > .env.test
          npx prisma migrate deploy
          npx prisma generate

      - name: 🔗 Run integration tests
        run: |
          echo "🔗 Running integration tests..."
          # Quando implementados, descomente a linha abaixo:
          # npm run test:integration
          echo "Integration tests not implemented yet"
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mediz_test

      - name: 📊 Upload integration test results
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: test-results/
          retention-days: 7
        if: always()

  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🗄️ Generate Prisma Client
        run: npx prisma generate

      - name: 🏗️ Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}

      - name: 🎭 Run E2E tests
        run: |
          echo "🎭 Running E2E tests..."
          # Quando implementados, descomente a linha abaixo:
          # npm run test:e2e
          echo "E2E tests not implemented yet"

      - name: 📊 Upload E2E test results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: test-results/
          retention-days: 7
        if: always()

  performance-tests:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    needs: e2e-tests
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🗄️ Generate Prisma Client
        run: npx prisma generate

      - name: 🏗️ Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}

      - name: ⚡ Run performance tests
        run: |
          echo "⚡ Running performance tests..."
          # Quando implementados, descomente a linha abaixo:
          # npm run test:performance
          echo "Performance tests not implemented yet"

      - name: 📊 Upload performance test results
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: test-results/
          retention-days: 7
        if: always()

  test-summary:
    name: 📊 Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, performance-tests]
    if: always()
    
    steps:
      - name: 📊 Generate test summary
        run: |
          echo "📊 Test Summary Report"
          echo "======================"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "Integration Tests: ${{ needs.integration-tests.result }}"
          echo "E2E Tests: ${{ needs.e2e-tests.result }}"
          echo "Performance Tests: ${{ needs.performance-tests.result }}"
          echo ""
          
          # Determina status geral
          if [ "${{ needs.unit-tests.result }}" = "success" ] && 
             [ "${{ needs.integration-tests.result }}" = "success" ] && 
             [ "${{ needs.e2e-tests.result }}" = "success" ] && 
             [ "${{ needs.performance-tests.result }}" = "success" ]; then
            echo "✅ All tests passed!"
          else
            echo "❌ Some tests failed!"
            exit 1
          fi
